document.addEventListener('DOMContentLoaded', function() {
  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
  const serverData = JSON.parse(document.getElementById('server-data').textContent);
  const loggedInUser = serverData.user;
  
  console.log('üîç –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', loggedInUser);
  
  // –ü–æ–ª—É—á–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã
  const authButtons = document.getElementById('authButtons');
  const logoutSection = document.getElementById('logoutSection');
  const welcomeText = document.getElementById('welcomeText');
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  function showAuthenticatedUser() {
    console.log('‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—Ö–æ–¥–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    authButtons.classList.remove('auth-visible');
    authButtons.classList.add('auth-hidden');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    logoutSection.classList.remove('auth-hidden');
    logoutSection.classList.add('auth-visible');
    
    welcomeText.classList.remove('auth-hidden');
    welcomeText.classList.add('auth-inline');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
    if (welcomeText) {
      welcomeText.textContent = `–ü—Ä–∏–≤—ñ—Ç, ${loggedInUser.username}!`;
    }
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  function showGuestUser() {
    console.log('‚ùå –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤—Ö–æ–¥–∞/—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    authButtons.classList.remove('auth-hidden');
    authButtons.classList.add('auth-visible');
    
    // –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—ã—Ö–æ–¥–∞ –∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
    logoutSection.classList.remove('auth-visible');
    logoutSection.classList.add('auth-hidden');
    
    welcomeText.classList.remove('auth-inline');
    welcomeText.classList.add('auth-hidden');
  }
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
  if (loggedInUser && loggedInUser.username) {
    showAuthenticatedUser();
  } else {
    showGuestUser();
  }
  
  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
  document.getElementById('registerSubmit').addEventListener('click', async function () {
    const name = document.getElementById('regName').value;
    const email = document.getElementById('regEmail').value;
    const password = document.getElementById('regPassword').value;
    const confirm = document.getElementById('regConfirmPassword').value;

    if (!name || !email || !password || !confirm) {
      alert('‚ùå –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è!');
      return;
    }

    if (password !== confirm) {
      alert('‚ùå –ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å!');
      return;
    }

    try {
      const res = await fetch('/register', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username: name, email, password })
      });

      const data = await res.json();

      if (res.ok) {
        alert('‚úÖ –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞!');
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modal = bootstrap.Modal.getInstance(document.getElementById('registerModal'));
        modal.hide();
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        setTimeout(() => location.reload(), 500);
      } else {
        alert('‚ùå ' + (data.error || '–ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó'));
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:', error);
      alert('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞');
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Ö–æ–¥–∞
  document.getElementById('loginSubmit').addEventListener('click', async function () {
    const email = document.getElementById('loginEmail').value;
    const password = document.getElementById('loginPassword').value;

    if (!email || !password) {
      alert('‚ùå –ó–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è!');
      return;
    }

    try {
      const res = await fetch('/login', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ email, password })
      });

      const data = await res.json();

      if (res.ok) {
        alert('‚úÖ –í—Ö—ñ–¥ —É—Å–ø—ñ—à–Ω–∏–π. –ü—Ä–∏–≤—ñ—Ç, ' + data.user.username + '!');
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modal = bootstrap.Modal.getInstance(document.getElementById('loginModal'));
        modal.hide();
        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
        setTimeout(() => location.reload(), 500);
      } else {
        alert('‚ùå ' + (data.error || '–ù–µ–≤—ñ—Ä–Ω–∏–π email –∞–±–æ –ø–∞—Ä–æ–ª—å'));
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞:', error);
      alert('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞');
    }
  });

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã—Ö–æ–¥–∞
  document.getElementById('btnLogout').addEventListener('click', async function() {
    try {
      const res = await fetch('/logout', { method: 'POST' });
      if (res.ok) {
        alert('‚úÖ –í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∏–π—à–ª–∏ –∑ —Å–∏—Å—Ç–µ–º–∏');
        location.reload();
      } else {
        alert('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏—Ö–æ–¥—ñ');
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error);
      alert('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞');
    }
  });

  document.getElementById('sortSelect').addEventListener('change', function () {
    const url = new URL(window.location);
    const sortValue = this.value;

    if (sortValue) {
        url.searchParams.set('sort', sortValue);
    } else {
        url.searchParams.delete('sort');
    }

    window.location.href = url.toString();
    });


      // –ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏
  document.getElementById('applyFilters').addEventListener('click', function () {
    const url = new URL(window.location);

    // –¢–µ–∫—Å—Ç–æ–≤—ñ —Ñ—ñ–ª—å—Ç—Ä–∏
    const selectFilters = [
      'brand', 'os', 'screen_type', 'refresh_rate', 'ram', 'rom',
      'video_recording', 'wifi_version', 'bluetooth_version', 'sim_type',
      'sim_count', 'fingerprint_sensor', 'body_material', 'ip_protection', 'color'
    ];

    selectFilters.forEach(key => {
      const element = document.getElementById(`${key}Filter`);
      if (element) {
        const value = element.value;
        if (value) {
          url.searchParams.set(key, value);
        } else {
          url.searchParams.delete(key);
        }
      }
    });

    // –ß–µ–∫–±–æ–∫—Å–∏
    const checkboxFilters = [
      'microsd_support', 'optical_stabilization', 'wireless_charge', 'reverse_charge',
      'support_5g', 'gps', 'nfc', 'ir_port', 'volte_support', 'face_unlock'
    ];

    checkboxFilters.forEach(key => {
      const checkbox = document.getElementById(`${key}Filter`);
      if (checkbox) {
        if (checkbox.checked) {
          url.searchParams.set(key, 'on');
        } else {
          url.searchParams.delete(key);
        }
      }
    });

    // –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
    window.location.href = url.toString();
  });

  // –û—á–∏—Å—Ç–∏—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏
  document.getElementById('clearFilters').addEventListener('click', function () {
    const url = new URL(window.location);

    // –í–∏–¥–∞–ª—è—î–º–æ –≤—Å—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
    const keys = [
      'brand', 'os', 'screen_type', 'refresh_rate', 'ram', 'rom',
      'video_recording', 'wifi_version', 'bluetooth_version', 'sim_type',
      'sim_count', 'fingerprint_sensor', 'body_material', 'ip_protection', 'color',
      'microsd_support', 'optical_stabilization', 'wireless_charge', 'reverse_charge',
      'support_5g', 'gps', 'nfc', 'ir_port', 'volte_support', 'face_unlock'
    ];

    keys.forEach(key => url.searchParams.delete(key));

    // –¢–∞–∫–æ–∂ –≤–∏–¥–∞–ª—è—î–º–æ –ø–æ—à—É–∫, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
    url.searchParams.delete('q');

    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º–æ –±–µ–∑ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
    window.location.href = url.toString();
  });


});